openapi: 3.0.0
info:
  title: My Proposals API
  version: 1.0.0
paths:
  /api/my-proposals:
    post:
      summary: Get proposals submitted by the freelancer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: Page number for pagination
                size:
                  type: integer
                  description: Number of items per page
                search:
                  type: string
                  description: Search term to filter proposals
                jobId:
                  type: string
                  description: Filter by job ID
                status:
                  type: array
                  description: Filter by proposal status
                  items:
                    type: string
                    enum: [PENDING, DECLINED, ACCEPTED, HIRED]
      responses:
        "200":
          description: A page of proposals
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        proposalId:
                          type: string
                        freelancerName:
                          type: string
                        freelancerId:
                          type: string
                        profilePicture:
                          type: string
                        freelancerTitle:
                          type: string
                        jobName:
                          type: string
                        jobId:
                          type: string
                        isCommunity:
                          type: boolean
                        status:
                          type: string
                          enum: [PENDING, DECLINED, ACCEPTED, HIRED]
                        contractId:
                          type: string
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer

  /api/proposals/{proposalId}:
    get:
      summary: Get details of a specific proposal by ID
      security:
        - bearerAuth: []
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the proposal to retrieve
      responses:
        "200":
          description: Proposal details
          content:
            application/json:
              schema:
                type: object
                properties:
                  proposalId:
                    type: string
                  jobName:
                    type: string
                  freelancerName:
                    type: string
                  freelancerId:
                    type: string
                  profilePicture:
                    type: string
                  isCommunity:
                    type: boolean
                  coverLetter:
                    type: string
                  pricePerHour:
                    type: number
                    format: double
                  paymentMethod:
                    type: string
                    enum: [PerMilestones, PerProject]
                  attachment:
                    type: string
                  date:
                    type: string
                    format: date
                  status:
                    type: string
                    enum: [PENDING, DECLINED, ACCEPTED, HIRED]
                  totalHours:
                    type: number

  /api/proposals/{id}/milestones:
    get:
      summary: Get milestones of a specific proposal
      description: Retrieves the list of milestones for a specific proposal with pagination.
      operationId: getMyProposalMilestones
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the proposal to retrieve milestones for
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: The page number for paginated results (0-based, defaults to 0)
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          required: true
          description: The number of items per page (defaults to 10)
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Successful response with milestones details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageMilestone"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Proposal or milestones not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PageMilestone:
      type: object
      required:
        - content
        - totalElements
        - totalPages
        - size
        - number
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Milestone"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                sorted:
                  type: boolean
                empty:
                  type: boolean
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            unpaged:
              type: boolean
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
    Milestone:
      type: object
      required:
        - title
        - description
        - expectedHours
        - dueDate
        - status
        - milestoneId
      properties:
        title:
          type: string
        description:
          type: string
        expectedHours:
          type: number
        dueDate:
          type: string
          format: date
        status:
          type: string
          enum: [not_started, in_review, in_progress, approved]
        milestoneId:
          type: string
