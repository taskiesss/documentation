openapi: 3.0.0
info:
  title: Freelancer Contract API
  version: 1.0.0
paths:
  /api/contracts/{id}:
    get:
      summary: Get details of a specific contract for a freelancer
      description: Retrieves detailed information about a specific contract including status, job details, client info.
      operationId: getMyContractById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the contract to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Successful response with contract details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Contract not found

  /api/contracts/{id}/milestones:
    get:
      summary: Get milestones of a specific contract
      description: Retrieves the list of milestones for a specific contract with pagination.
      operationId: getMyContractMilestones
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the contract to retrieve milestones for
          schema:
            type: string
        - name: page
          in: query
          required: true
          description: The page number for paginated results (0-based, defaults to 0)
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          required: true
          description: The number of items per page (defaults to 10)
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Successful response with milestones details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageMilestone"
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Contract or milestones not found

  /api/contracts/{contractId}/rate-contract/{rate}:
    post:
      summary: Rate a contract
      description: Allows the client, the freelancer, or the community admin (if the freelancer belongs to a community) to rate the contract.
      operationId: rateContract
      security:
        - bearerAuth: []
      parameters:
        - name: contractId
          in: path
          required: true
          description: The ID of the contract to rate
          schema:
            type: string
        - name: rate
          in: path
          required: true
          description: The rating value from 1 to 5
          schema:
            type: integer
            minimum: 1
            maximum: 5
      responses:
        "200":
          description: Rating submitted successfully
        "400":
          description: Invalid rating value or contract state
        "401":
          description: Unauthorized - Invalid or missing token
        "403":
          description: Forbidden - User does not have permission to rate this contract
        "404":
          description: Contract not found
  /freelancers/contracts/{contractId}/approve-contract:
    post:
      summary: Approve or reject a contract
      description: Endpoint to approve or reject a specific contract by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          schema:
            type: string
          description: The unique identifier of the contract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accepted:
                  type: boolean
                  description: Indicates whether the contract is accepted (true) or rejected (false)
              required:
                - accepted
      responses:
        "200":
          description: Contract approval status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Contract not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Contract:
      type: object
      required:
        - contractStatus
        - jobId
        - clientName
        - profilePic
        - pricePerHour
        - startDate
        - endDate
        - jobTitle
        - projectType
        - totalCurrentEarnings
        - hoursWorked
        - voteIsDone
        - pendingClientToRate
        - pendingFreelancerToRate
      properties:
        contractStatus:
          type: string
          enum: [active, ended]
          description: Current status of the contract
        jobId:
          type: string
          description: ID of the job associated with the contract
        jobTitle:
          type: string
          description: Title of the job associated with the contract
        clientId:
          type: string
          description: Name of the client
        clientName:
          type: string
          description: Name of the client
        clientProfilePic:
          type: string
          format: uri
          description: URL to the client's profile picture
        freelancerId:
          type: string
          description: Name of the client
        freelancerName:
          type: string
          description: Name of the freelancer
        freelancerProfilePic:
          type: string
          format: uri
          description: URL to the freelancer's profile picture
        pricePerHour:
          type: number
          format: float
          description: Hourly rate for the contract
        totalCurrentEarnings:
          type: number
          format: float
          description: Total earnings accumulated for the contract so far
        memberPercentage:
          type: number
          format: float
          description: Percentage share if part of a community
        memberEarnings:
          type: number
          format: float
          description: Earnings of the member if in a community
        hoursWorked:
          type: number
          format: float
          description: Total hours worked on the contract to date
        startDate:
          type: string
          format: date
          description: Date when the contract started
        endDate:
          type: string
          description: Date when the contract ended or "present" if still active
        isCommunity:
          type: boolean
          description: If the freelancer is part of a community
        isCommunityAdmin:
          type: boolean
          description: If the freelancer is the admin of the community
        projectType:
          type: string
          enum: [PerMilestones, PerProject]
          description: Type of project billing structure
        voteIsDone:
          type: boolean
          default: false
          description: Indicates if the user has voted on the contract
        pendingClientToRate:
          type: boolean
          default: false
          description: Indicates if the freelancer is pending to rate the client
        pendingFreelancerToRate:
          type: boolean
          default: false
          description: Indicates if the client is pending to rate the freelancer

    PageMilestone:
      type: object
      required:
        - content
        - totalElements
        - totalPages
        - size
        - number
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Milestone"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                sorted:
                  type: boolean
                empty:
                  type: boolean
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            unpaged:
              type: boolean
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32

    Milestone:
      type: object
      required:
        - title
        - description
        - expectedHours
        - dueDate
        - status
        - milestoneId
      properties:
        title:
          type: string
        description:
          type: string
        expectedHours:
          type: number
        dueDate:
          type: string
          format: date
        status:
          type: string
          enum: [not_started, in_review, in_progress, approved]
        milestoneId:
          type: string
